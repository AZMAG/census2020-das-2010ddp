# 
# This is the global defaults file
#
# Include it from the [defaults] section to include *ALL* of the sections.
# Include it from a specific section to only include the matching section.
# (e.g. an include from the [gurobi] section in a config file will only include
# the gurobi section here.)
#
# Unclear about your config file? Run "python das2020_driver.py --dump_config <configname>" 
# to expanded all of the INCLUDES in your config file and dump the result.

[stats]
# How often we should report on the driver the heartbeat (in seconds)
# Heartbeat is used to coordinate with the dashboard 
heartbeat_frequency: 60

# Whether we print the heartbeat or not, and how often it should be printed
print_heartbeat: 0
print_heartbeat_frequency: 60



# Notify when GC is run on the master node
notify_gc_master: 0

[python]
#executable=/mnt/apps/Anaconda/bin/python3
#executable=/mnt/apps5/Anaconda3-2018.12/bin/python3.7
executable=/mnt/apps5/intelpython3_2019.2/bin/python3.6

[gurobi]
#gurobi_path: /mnt/apps5/gurobi810/linux64/lib/${PYTHON_VERSION}_utf32/
gurobi_path: /mnt/apps5/gurobi752/linux64/lib/${PYTHON_VERSION}_utf32/
gurobi_lic: /apps/gurobi752/gurobi_client.lic
gurobi_logfile_name: gurobi.log
OutputFlag: 1
OptimalityTol: 1e-9
BarConvTol: 1e-8
BarQCPConvTol: 0 
BarIterLimit: 1000 
FeasibilityTol: 1e-9
Presolve: -1
NumericFocus: 3

# Control the number of threads used by Gurobi
Threads: 1

# Threads for the top-geolevel
threads_n2n: 64

# Threads for each geolevel (if not top geolevel)
threads_nation: 64
threads_state: 32
threads_county: 16
threads_tract_group: 8
threads_tract: 8
threads_block_group: 8
threads_block: 8


# Do we explicitly run presolve in Python?  1 or 0
python_presolve: 1

# Record the optimizers stats in the node object.
# Recording stats automatically sends them to syslog, which is low-cost
record_gurobi_stats: True
record_CPU_stats: True
record_VM_stats: True

# Save the stats to S3. 
# This is high cost.
save_stats: False

# Gurobi prints stats to STDOUT on the CORE nodes, where it is hard to find.. 
# You probably don't want to do this.
print_gurobi_stats: False

notification_frequency: 60
[reader]

[hdmm]
#pidentity or marginal
#strategy_type: marginal
#ps_parameters for pidentity strategy type only (needs to be same length as hist_shape)
#ps_parameters: 1,1,2,1
#save_strategy: yes
#load_strategy: yes
#load_strategy_path: $DAS_S3ROOT/users/$JBID/hdmm_RI

[writer]

# Uncomment in your file if you want to save an LP file
# save_lp_path = $DAS_S3ROOT/lpfiles/$JBID/$MISSION_NAME
# Save every LP file for every geocode in Rhode Island that ends with a 0
# save_lp_pattern = 44*0

writer: programs.writer.pickled_block_data_writer.PickledBlockDataWriter
#writer: programs.writer.block_node_writer.BlockNodeWriter
keep_attrs: geocode, raw, syn, _invar

# Write the Data? 0 or 1
produce_flag: 0

# combine the output files?
s3cat: 1
s3cat_prefix: .pickle
s3cat_verbose: 1


# options for block_node_write 
# delete existing file (if one) 0 or 1
overwrite_flag: 0
num_parts: 100

stats_dir: $DAS_S3ROOT/rpc/upload

# Upload logfile to dashboard?
upload_logfile: 1

[setup]
[engine]
[validator]
[takedown]
